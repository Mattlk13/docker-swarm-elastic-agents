/*
 * Copyright 2022 Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply from: "https://raw.githubusercontent.com/gocd/gocd-plugin-gradle-task-helpers/master/helper.gradle?_=${(int) (new Date().toInstant().epochSecond / 60)}"

gocdPlugin {
    id = 'cd.go.contrib.elastic-agent.docker-swarm'
    pluginVersion = '6.0.0'
    goCdVersion = '22.1.0'
    name = 'GoCD Docker Swarm Elastic Agents'
    description = 'Docker Swarm Based Elastic Agent Plugins for GoCD'
    vendorName = 'Thoughtworks, Inc.'
    vendorUrl = 'https://github.com/gocd-contrib/docker-swarm-elastic-agent-plugin'

    githubRepo {
        owner = System.getenv('GITHUB_USER') ?: 'bob'
        repo = 'docker-swarm-elastic-agent-plugin'
        token = System.getenv('GITHUB_TOKEN') ?: 'bad-token'
    }

    pluginProject = project

    prerelease = !"No".equalsIgnoreCase(System.getenv('PRERELEASE'))
    assetsToRelease = [project.tasks.jar]
}


group = 'cd.go.contrib'
version = gocdPlugin.fullVersion(project)

repositories {
    mavenCentral()
    mavenLocal()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

ext {
    deps = [
        gocdPluginApi: 'cd.go.plugin:go-plugin-api:25.2.0',
        mockito      : 'org.mockito:mockito-core:5.18.0',
    ]

    versions = project.ext.deps.collectEntries { lib, libGav -> [lib, libGav.split(':').last()] }
}

dependencies {
    compileOnly project.deps.gocdPluginApi
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.13.1'
    implementation group: 'com.spotify', name: 'docker-client', version: '8.16.0'
    implementation group: 'com.google.guava', name: 'guava', version: '33.4.8-jre'

    components {
        // workaround for Guava metadata declaring dependencies that are not needed at runtime
        // see https://github.com/google/guava/pull/6606
        withModule('com.google.guava:guava', { details ->
            details.allVariants {
                withDependencies {
                    removeAll {
                        it.name in [ "listenablefuture", "jspecify", "error_prone_annotations", "j2objc-annotations" ]
                    }
                }
            }
        })
    }

    implementation group: 'joda-time', name: 'joda-time', version: '2.14.0'
    implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.34'
    constraints {
        implementation('commons-io:commons-io:2.19.0') {
            because 'spotify docker-client uses an outdated version'
        }
        implementation('org.apache.commons:commons-compress:1.27.1') {
            because 'spotify docker-client uses an outdated version'
        }
        implementation('org.apache.commons:commons-lang3:3.18.0') {
            because 'spotify docker-client uses an outdated version'
        }
        implementation('org.apache.httpcomponents:httpclient:4.5.14') {
            because 'spotify docker-client uses an outdated version'
        }
        implementation('com.github.jnr:jnr-unixsocket:0.38.23') {
            because 'spotify docker-client uses an outdated version'
        }
    }
    modules {
        module('org.bouncycastle:bcpkix-jdk15on') {
            replacedBy('org.bouncycastle:bcpkix-jdk18on', "Everything can go via the JDK 1.8+ BouncyCastle version")
        }
    }
    implementation('org.bouncycastle:bcpkix-jdk18on:1.81') {
        because 'spotify docker-client uses an outdated version'
    }
    implementation(platform('com.fasterxml.jackson:jackson-bom:2.19.2')) // because 'spotify docker-client uses an outdated version'

    testImplementation project.deps.gocdPluginApi
    testImplementation platform('org.junit:junit-bom:5.13.2')
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
    testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.27.3'
    testImplementation project.deps.mockito
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: project.versions.mockito
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '3.0'
    testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.3'
    testImplementation group: 'org.jsoup', name: 'jsoup', version: '1.21.1'
}

test {
    useJUnitPlatform()
}

jar {
    from(configurations.runtimeClasspath) {
        into "lib/"
    }
}
